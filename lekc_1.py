# name = 'alex'
# age = None

# a =  42
# print(id(a))
# a = 'hello world'
# print(id(a))
# print(name, age, a, 456, 'text', sep=' (=^.^=) ', end= '#')
# print('any text')
# res = input('print your text: ')
# print('—Ç—ã –Ω–∞–ø–∏—Å–∞–ª ',res)

# ADULT = 18 // –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ 
# age = int(input('—Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç? '))
# how_old = ADULT - age
# print(how_old, '–æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è ')
# pwd = 'text'
# res = input ('input password: ')
# if res == pwd:
#     print('–¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω ')
#     print('–Ω–æ –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã ')
# else:
#     print('–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—à–µ–Ω ')
# print('—Ä–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ')
# color = input ('—Ç–≤–æ–π –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç: ')
# if color == '–∫—Ä–∞—Å–Ω—ã–π':
#     print('–ª—é–±–∏—Ç–µ–ª—å —è—Ä–∫–æ–≥–æ')
# elif color == '–∑–µ–ª–µ–Ω—ã–π':
#     print('—Ç—ã –Ω–µ –æ—Ö–æ–¥—Ç–Ω–∏–∫?')
# elif color == '—Å–∏–Ω–∏–π':
#     print('—Ö–∞, –∫–ª–∞—Å—Å–∏–∫–∞')
# else:
#     print('—Ç–µ–±—è –Ω–µ –ø–æ–Ω—è—Ç—å ')

# // match case // 
# match color:
#     case '–∫—Ä–∞—Å–Ω—ã–π' | '–æ—Ä–∞–Ω–∂–µ–≤—ã–π':
#         print('–ª—é–±–∏—Ç–µ–ª—å —è—Ä–∫–æ–≥–æ')
#     case '–∑–µ–ª–µ–Ω—ã–π':
#         print('—Ç—ã –Ω–µ –æ—Ö–æ–¥—Ç–Ω–∏–∫?')
#     case '—Å–∏–Ω–∏–π'| '–≥–æ–ª—É–±–æ–π':
#         print('—Ö–∞, –∫–ª–∞—Å—Å–∏–∫–∞')
#     case _:
#         print('—Ç–µ–±—è –Ω–µ –ø–æ–Ω—è—Ç—å ')
# year = int(input ('–≤–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —É—É—É: '))
# if year % 4 != 0 or year % 100 == 0 and year % 400 == 0:
#      print('–æ–±—ã—á–Ω—ã–π')
# else:
#     print('–≤–∏—Å–æ–∫–æ—Å–Ω—ã–π')
# data = [0, 1, 1, 2, 3, 5, 8, 13, 21]
# num = int(input ('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
# if num  not in data:
#      print('–ª–µ–æ–Ω–∞—Ä–¥–æ –≥—Ä—É—Å—Ç–∏—Ç')
# //
# my_math = int(input ('2 + 2 =  '))
# if 2 + 2 == my_math:
#     print('–≤–µ—Ä–Ω–æ')
# else:
#     print('–≤—ã —É–≤–µ—Ä–µ–Ω—ã?')

# my_math = int(input ('2 + 2 =  '))
# print('–≤–µ—Ä–Ω–æ' if 2 + 2 == my_math else print('–≤—ã —É–≤–µ—Ä–µ–Ω—ã?')

# // –¶–ò–ö–õ–´ while
# num = float (input('–í–≤–µ–¥–∏—Ç—Ç–µ —á–∏—Å–ª–æ: '))
# count = 0
# while count < num:
#     print (count)
#     count +=2

# // continue 
# num = float (input('–í–≤–µ–¥–∏—Ç—Ç–µ —á–∏—Å–ª–æ: '))
# STEP = 2
# limit = num - STEP
# count = - STEP
# while count < limit:
#     count += STEP
#     if count % 12 == 0:
#         continue
#     print (count)

# // break
# min_limit = 0
# max_limit = 10
# while True:
#     print ('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É', min_limit, '–∏' max_limit, '? ')
#     num = float (input())
#     if num < min_limit or num > max_limit:
#           print ('–Ω–µ–≤–µ—Ä–Ω–æ')
#     else:
#          break     
# print ('–ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ  ' , num)
  
# // else 

# min_limit = 0
# max_limit = 10
# count = 3
# num = None
# while count > 0:
#     print ('–ø–æ–ø—ã—Ç–∫–∞  ', count)
#     count -= 1

#     print('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ', min_limit, '–∏', max_limit, '?')
#     num = float (input())
#     if num < min_limit or num > max_limit:
#           print ('–Ω–µ–≤–µ—Ä–Ω–æ')
#     else:
#          break
# else:
#      print ('–ò—Å—á–µ—Ä–ø–∞–Ω—ã –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏, —Å–æ–∂–∞–ª–µ—é')
#      quit() 

# print ('–ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ  ' , num)

# // for in
# data = [0, 1, 1, 2, 3, 5, 8, 13, 21]
# for item in data:
#      print(item)

# // –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–π —Ü–∏–∫–ª, —Ñ—É–Ω–∫—Ü–∏—è range() 
# num = int (input('–í–≤–µ–¥–∏—Ç—Ç–µ —á–∏—Å–ª–æ: '))
# for i in range (0, num, 2):
#      print(i)

# // —Ñ—É–Ω–∫—Ü–∏—è enumerate() 
# animals = ['cat', 'dog', 'wolf', 'rate', 'dragon']
# for i, animal in enumerate (animals, start = 1):
#      print(i, animal)

"""
data = 0
while data < 100:
 data += 3
 if data % 40 == 0:
     break
else:
 data += 5
print(data)
"""

"""
–õ–ï–ö–¶–ò–Ø 2
–ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ Python (–ª–µ–∫—Ü–∏–∏)
–£—Ä–æ–∫ 2. –ü—Ä–æ—Å—Ç—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö 
"""
"""
// –§ type, id
a = 5
print(type (a), id(a))
a = "hello wprd"
print(type (a), id(a))
a = 42.0 * 3.141592 / 2.71828
print(type (a), id(a))
"""
"""
# –§ isinstance
data = 42
print(isinstance(data, int))

data = True
print(isinstance(data, int))

data = 3.14
print(isinstance(data, (int, float, complex)))
"""
"""
// –æ–ø–µ—Ä–∞—Ç–æ—Ä is 
num = 2 + 2 * 2
digit = = 36 / 6 
print ( num == digit)
print (num is digit)

'''
a = 5
print (a, id(a))
a += 1
print (a, id(a))

# txt = 'hello word'
# txt [5] = '-'
txt = 'hello word'
print (txt, id(txt))
txt = txt.replace(' ', '_')
print (txt, id(txt))
'''
'''
a = c = 2
b = 3
print (a, id(a), b, id(b), c, id(c))
a = b + c
print (a, id(a), b, id(b), c, id(c))
'''
'''
# // —Ö—ç—à

x = 42
y = 'text'
z = 3.1415
print (hash(x), hash(y), hash(z))
my_list = [x, y, z]
print (hash(my_list))
'''
# // –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è —Ç–∏–ø–æ–≤
a: int = 42
b: float = float(input('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
a = a / b


def my_func(data: list [int, float]) -> float:
    res = sum(data) / len(data)
    return res
print(my_func([2, 5.5/ 15, 8.0, 13.74]))

# // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ | —á–µ—Ä—Ç—ã
a: int | float = 42
b: float = float(input('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
a = a / b


# //–∞—Ç—Ä–∏–±—É—Ç—ã –∏ –º–µ—Ç–æ–¥—ã
print('hello world!'.__doc__)
print(str.__doc__)

print('hello world!'.upper())
print('hello world!'.count('L'))

# // –§—É–Ω–∫—Ü–∏—è dir, help
print(dir('hello world!'))
help('hello world!')


# //–¶–µ–ª—ã–µ —á–∏—Å–ª–∞ 
x = int('42')
y = int(3.1415)
z = int('hello', base ¬†= 30)
print (x, y , z, sep = '\n')

# // —Ä–µ–∑–∏–Ω–æ–≤—ã–π int
import sys

STEP = 2 ** 16
num = 1
for _ in range(30):
    print(sys. getsizeof(num), num)
    num *= STEP
'''

num = 7_901_123_456_789
print(num)


# // bin(x) oct(x) hex(x)
num = 2 ** 16 - 1
b = bin(num)
o = oct(num)
h = hex(num)
print(b, o, h)

# // –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞
print(0.1 + 0.2)
pi = 3.141_592_653_589_793_238_462_643_383_279_502_884_197_169_399_375
print(pi)

# // –õ–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–∏–ø—ã 

DEFAULT = 42
num = int(input('–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∏–ª–∏ –Ω–æ–ª—å –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:'))
level = num or DEFAULT
print(level)

name = input('–∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?')
if name:
    print('–ü—Ä–∏–≤–µ—Ç,' + name)
else:
    print('–ê–Ω–æ–Ω–∏–º—É—Å, –ø—Ä–∏–≤–µ—Ç—Å–≤—É—é' )    

data = [0, 1, 1, 2, 3, 5, 8, 13, 21]
while data:
    print(data.pop())
"""

# // —Å—Ç—Ä–æ–∫–∏ 
# txt = '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è "–í–æ–π–Ω–∞ –∏ –º–∏—Ä".'

# class str(object):
"""
    str(object= ' ') -> str
    str(butes _or_buffer[, encoding [, errors]]) -> str
    ...
    
    # // –°—Ç—Ä–æ–∫–∏ –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö –∑–∞–ø–∏—Å–∏
text = '–ü—Ä–∏–≤–µ—Ç.–ö–∞–∫ —Ç—ã, –¥—Ä—É–≥? –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.'
print (text)

long_text = '–ü–µ—Ä–≤–∞—è –≤–∫–ª–∞–¥–∫–∞ ‚Äî Ctrl + 1, –≤—Ç–æ—Ä–∞—è Ctrl + 2 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. \
    –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –Ω–µ—Ö–∏—Ç—Ä–∞—è, –Ω–æ –Ω–µ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–∞—è:' \
    '–ø–∞–ª—å—Ü—ã —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω—ã –¥–ª—è —Ç–∞–∫–∏—Ö –≤—ã–≥–∏–±–æ–Ω–æ–≤. \
–ß–∞—Å—Ç–æ –ø—Ä–æ—â–µ –æ—Ç–¥–µ–ª–∏—Ç—å –≤–∫–ª–∞–¥–∫—É –≤ –æ–∫–Ω–æ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è Alt + Tab'
print(long_text)

# // –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è —Å—Ç—Ä–æ–∫

LIMIT = 120
ATTENTION = '–í–Ω–∏–º–∞–Ω–∏–µ!'
name = input('–¢–≤–æ—ë –∏–º—è? ')
age = int(input('–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç? '))
text = ATTENTION + ' –•–æ—Ç—å —Ç–µ–±–µ –∏ –æ—Å—Ç–∞–ª–æ—Å—å ' +\
str(100 - age) + " –¥–æ —Å—Ç–∞ –ª–µ—Ç, –Ω–æ –¥–ª–∏–Ω–Ω–∞" \
" —Å—Ç—Ä–æ–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å " +\
str(LIMIT) + ' —Å–∏–º–≤–æ–ª–æ–≤.'
print(text)
'''
# // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≤ –ø–∞–º—è—Ç–∏

empty_str = ''
en_str = 'Text'
ru_str = '–¢–µ–∫—Å—Ç'
unicode_str = 'üòÄüòçüòâüôÉ'
print(empty_str.__sizeof__())
print(en_str.__sizeof__())
print(ru_str.__sizeof__())
print(unicode_str.__sizeof__())


# // –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –≤ Python

# // –ú–æ–¥—É–ª—å math

import math
print(math.pi, math.e, math.inf, math.nan, math.tau, sep='\n')
print(dir(math))
print (help(math.gcd))

# // –ú–æ–¥—É–ª—å decimal
import decimal
print(0.1 + 0.2)
pi = decimal.Decimal (3.141_592_653_589_793_238_462_643_383_279_502_884_197_169_399_375)
print(pi)
num = decimal.Decimal(1) / decimal.Decimal(3)
print(num)

decimal.getcontext().prec = 120
sceince = 2 * pi * decimal.Decimal (23.452346) ** 2
print(sceince)

# //–ú–æ–¥—É–ª—å fraction
import fractions
f1 = fractions.Fraction(1, 3)
print(f1)
f2 = fractions.Fraction(3, 5)
print(f2)
print(f1 * f2)

# //–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —á–∏—Å–ª–∞
a = complex(2, 3)
b = complex('3+3j')
print(a, b, a == b, sep='\n')


# //–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ ¬´–∏–∑ –∫–æ—Ä–æ–±–∫–∏¬ª 
x = -42
print(abs(x))

a = 42
b = 5
print(divmod(a, b))

print(pow(a, b))
print(pow(a, b, 10))

print(round(3.141_592_653_589_793, 3))
"""

my_set = {3, 4, 2, 5, 6, 1, 7}
other_set = {1, 4, 42, 314}
new_set = my_set.difference(other_set) 
print(f'{my_set = } \n {other_set = } \n {new_set =}')