'''
a = 5
print (a, id(a))
a += 1
print (a, id(a))

# txt = 'hello word'
# txt [5] = '-'
txt = 'hello word'
print (txt, id(txt))
txt = txt.replace(' ', '_')
print (txt, id(txt))
'''
'''
a = c = 2
b = 3
print (a, id(a), b, id(b), c, id(c))
a = b + c
print (a, id(a), b, id(b), c, id(c))
'''
'''
# // —Ö—ç—à

x = 42
y = 'text'
z = 3.1415
print (hash(x), hash(y), hash(z))
my_list = [x, y, z]
print (hash(my_list))


x = int('42')
y = int(3.1415)
z = int('hello', base  = 30)
print (x, y , z, sep = '\n')

# // —Ä–µ–∑–∏–Ω–æ–≤—ã–π int
import sys

STEP = 2 ** 16
num = 1
for _ in range(30):
    print(sys. getsizeof(num), num)
    num *= STEP

    
num = 7_901_123_456_789
print(num)
 
#  // –°—Ç—Ä–æ–∫–∏ –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö –∑–∞–ø–∏—Å–∏
text = '–ü—Ä–∏–≤–µ—Ç.–ö–∞–∫ —Ç—ã, –¥—Ä—É–≥? –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.'
print (text)

long_text = '–ü–µ—Ä–≤–∞—è –≤–∫–ª–∞–¥–∫–∞ ‚Äî Ctrl + 1, –≤—Ç–æ—Ä–∞—è Ctrl + 2 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. \
    –ö–æ–º–±–∏–Ω–∞—Ü–∏—è –Ω–µ—Ö–∏—Ç—Ä–∞—è, –Ω–æ –Ω–µ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–∞—è:' \
    '–ø–∞–ª—å—Ü—ã —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ –æ—á–µ–Ω—å –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω—ã –¥–ª—è —Ç–∞–∫–∏—Ö –≤—ã–≥–∏–±–æ–Ω–æ–≤. \
–ß–∞—Å—Ç–æ –ø—Ä–æ—â–µ –æ—Ç–¥–µ–ª–∏—Ç—å –≤–∫–ª–∞–¥–∫—É –≤ –æ–∫–Ω–æ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è Alt + Tab'
print(long_text)

# // –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è —Å—Ç—Ä–æ–∫

LIMIT = 120
ATTENTION = '–í–Ω–∏–º–∞–Ω–∏–µ!'
name = input('–¢–≤–æ—ë –∏–º—è? ')
age = int(input('–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç? '))
text = ATTENTION + ' –•–æ—Ç—å —Ç–µ–±–µ –∏ –æ—Å—Ç–∞–ª–æ—Å—å ' +\
 str(100 - age) + " –¥–æ —Å—Ç–∞ –ª–µ—Ç, –Ω–æ –¥–ª–∏–Ω–Ω–∞" \
 " —Å—Ç—Ä–æ–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å " +\
 str(LIMIT) + ' —Å–∏–º–≤–æ–ª–æ–≤.'
print(text)

# // –†–∞–∑–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –≤ –ø–∞–º—è—Ç–∏

empty_str = ''
en_str = 'Text'
ru_str = '–¢–µ–∫—Å—Ç'
unicode_str = 'üòÄüòçüòâüôÉ'
print(empty_str.__sizeof__())
print(en_str.__sizeof__())
print(ru_str.__sizeof__())
print(unicode_str.__sizeof__())

# // –§—É–Ω–∫—Ü–∏—è len 

my_list = [2, 4, 6, 2, 8, 10, 12, 14, 16, 18]
matrix = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
print (len(my_list))
print (len(matrix))
print (len(matrix[1]))

// –¥–ª—è —Å–∞–º–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ 
my_list = [2, 4, 6, 2, 8, 10, 12, 14, 16, 18] 
print(my_list[2:6:2]) 
print(my_list.pop()) 
print(my_list.extend([314, 42])) 
print(my_list.sort(reverse=False)) 
print(my_list) 

# // –°—Ç—Ä–æ–∫–∏, str
text = 'Hello world'
print(text [6])
print(text [3:7])

next_txt = text. replace ('l', "L", 2)
print(text, next_txt, sep='\n')

# // –º–µ—Ç–æ–¥—ã 
text = 'Hello world'
print(text.count ('l'))
print(text.index ('l'))
print(text.find ('l'))
print(text.find ('z'))

# // –ú–µ—Ç–æ–¥ join
data = ['https:', '', 'gb.ru', 'lessons', '355973']
url = '/'.join(data)
print(url)

# // –º–µ—Ç–æ–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫—É
# // –ú–µ—Ç–æ–¥ upper(), lower(), title(), capitalize()
text = '–æ–¥–Ω–∞–∂–¥—ã –í –°–ò–£–î–ï–ù–£–Æ –∑–∏–º–Ω–Æ–Æ –ü–æ–†–£'
print(text.upper ())
print(text.lower ())
print(text.title ())
print(text.capitalize ())

# // –ú–µ—Ç–æ–¥ startswith() –∏ endswith()
text = '–û–¥–Ω–∞–∂–¥—ã –í —Å—Ç—É–¥–µ–Ω—É—é –∑–∏–º–Ω—é—é –ø–æ—Ä—É'
print(text.startswith('–û–¥–Ω–∞–∂–¥—ã'))
print(text.endswith('–∑–∏–º–Ω—é—é', 0, -5))

# // –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏
text = '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!'
print(text.find(' '))
print(text.title())
print(text.split())
print(f'{text = :>25}')

# // –ú–µ—Ç–æ–¥ setdefault
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
spam = my_dict.setdefault ('five')
print(f'{spam = } \ t {my_dict=}')
eggs = my_dict.setdefault ('six', 6)
print(f'{eggs = } \ t {my_dict=}')
new_spam = my_dict.setdefault('two')
print(f'{new_spam = } \ t {my_dict=}')
new_eggs = my_dict.setdefault('one', 1_000)
print(f'{new_eggs = } \ t {my_dict=}')

#//–ú–µ—Ç–æ–¥ key
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
print(my_dict.keys())

for key in my_dict.keys():
    print(key)

# //–ú–µ—Ç–æ–¥ values
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
print(my_dict.values())

for value in my_dict.values():
    print(value)

# //–ú–µ—Ç–æ–¥ items
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
print(my_dict.items())

for tuple_data in my_dict.items():
    print(tuple_data)
    print (f'{tuple_data[0] = } value before 100 - {100 - tuple_data [1]}')

for key, value in my_dict.items():
     print (f'{key = } value before 100 - {100 - value}')

# //–ú–µ—Ç–æ–¥ popitem
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
spam = my_dict.popitem ()
print(f'{spam = } \ t {my_dict=}')
eggs = my_dict.popitem ()
print(f'{eggs = } \ t {my_dict=}')

# //–ú–µ—Ç–æ–¥ pop
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
spam = my_dict.pop ('two')
print(f'{spam = } \ t {my_dict=}')
# err = my_dict.pop ('six')
err =  my_dict.pop ()


# //–ú–µ—Ç–æ–¥ update
my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
my_dict.update(dict(six=6))
print(my_dict)
my_dict.update(dict([('five', 5), ('two', 42)]))
print(my_dict)

my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
new_dict = my_dict | {'five': 5, 'two': 42} | dict(six=6)
print(new_dict)

# // –ú–ï–¢–û–î in
my_set = {3, 4, 2, 5, 6, 1, 7}
print( 42 in my_set)

my_set = frozenset({3, 4, 1, 2, 5, 6, 1, 7, 2, 7})
print(len(my_set))
print(my_set - {1, 2, 3})
print(my_set.union({2, 4, 6, 8}))
print(my_set & {2, 4, 6, 8})
print(my_set.discard(10))

# //–ë–∞–π—Ç—ã, bytes –∏ bytearray

text_en = 'Hello world!'
res = text_en.encode('utf-8')
print(res, type(res))
text_ru = '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!'
res = text_ru.encode('utf-8')
print(res, type(res))
'''
x = bytes(b'\xd0\x9f\xd1\x80\xd0\xb8')
y = bytearray(b'\xd0\x9f\xd1\x80\xd0\xb8')
print(f'{x = } \n {y = }')

